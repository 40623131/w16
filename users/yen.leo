<?xml version="1.0" encoding="utf-8"?>
<!-- Created by Leo: http://leoeditor.com/leo_toc.html -->
<leo_file xmlns:leo="http://leoeditor.com/namespaces/leo-python-editor/1.1" >
<leo_header file_format="2" tnodes="0" max_tnode_index="0" clone_windows="0"/>
<globals body_outline_ratio="0.5" body_secondary_ratio="0.5">
	<global_window_position top="50" left="50" height="500" width="700"/>
	<global_log_window_position top="0" left="0" height="0" width="0"/>
</globals>
<preferences/>
<find_panel_settings/>
<vnodes>
<v t="leo.20171116033033.1"><vh>@settings</vh>
<v t="leo.20171116033033.2"><vh>@data qt-gui-plugin-style-sheet</vh></v>
<v t="leo.20171116033033.3"><vh>@string initial_split_orientation = horizontal</vh></v>
</v>
<v t="leo.20171116033040.1"><vh>有關 2017fall CADP &amp; CP</vh></v>
<v t="leo.20171116033046.1" a="E"><vh>@path ../</vh>
<v t="leo.20171116033046.2"><vh>近端無 disqus</vh>
<v t="leo.20171116033046.3"><vh>@button pelican-blog</vh></v>
</v>
<v t="leo.20171116033046.4" a="E"><vh>有 disqus 論壇</vh>
<v t="leo.20171116033046.5"><vh>@button github-blog</vh></v>
</v>
<v t="leo.20171116033046.6"><vh>@edit README.md</vh></v>
<v t="leo.20171116033046.7"><vh>@edit .gitignore</vh></v>
<v t="leo.20171116033046.8" a="E"><vh>Pelican 設定</vh>
<v t="leo.20171116033046.9" a="E"><vh>近端</vh>
<v t="leo.20171116033046.10"><vh>@edit local_publishconf.py</vh></v>
</v>
<v t="leo.20171116033046.11" a="E"><vh>遠端</vh>
<v t="leo.20171116033046.12"><vh>@edit publishconf.py</vh></v>
</v>
<v t="leo.20171116033046.13"><vh>共用</vh></v>
<v t="leo.20171116033046.14"><vh>@edit pelicanconf.py</vh></v>
</v>
<v t="leo.20171116033046.15" a="E"><vh>編輯 template</vh>
<v t="leo.20171116033046.16" a="E"><vh>@path theme/pelican-bootstrap3_local/templates</vh>
<v t="leo.20171116033046.17"><vh>@edit base.html</vh></v>
</v>
<v t="leo.20171116033046.18" a="E"><vh>@path theme/pelican-bootstrap3/templates</vh>
<v t="leo.20171116033046.19"><vh>@edit search.html</vh></v>
<v t="leo.20171116033046.20"><vh>@edit base.html</vh></v>
<v t="leo.20171116033046.21"><vh>@edit article.html</vh></v>
</v>
</v>
<v t="leo.20171116033046.22" a="E"><vh>@clean index.html</vh>
<v t="leo.20171116033046.23" a="E"><vh>html</vh>
<v t="leo.20171116033046.24"><vh>head</vh></v>
<v t="leo.20171116033046.25" a="E"><vh>body</vh>
<v t="leo.20171116033046.26" a="E"><vh>reveal div</vh>
<v t="leo.20171116033046.27" a="E"><vh>slides div</vh>
<v t="leo.20171116033046.28" a="E"><vh>封面投影片</vh>
<v t="leo.20171116033046.29"><vh>封面投影片內容</vh></v>
</v>
<v t="leo.20171116033046.30" a="E"><vh>內容大簡介</vh>
<v t="leo.20171116033046.31"><vh>封面投影片內容</vh></v>
</v>
<v t="leo.20171116033046.32" a="E"><vh>W1-W3</vh>
<v t="leo.20171116033046.33" a="E"><vh>上課大綱</vh>
<v t="leo.20171116033046.34"><vh>內容</vh></v>
</v>
<v t="leo.20171116033046.35" a="E"><vh>如何開啟與關閉隨身系統</vh>
<v t="leo.20171116033046.36"><vh>內容</vh></v>
</v>
<v t="leo.20171116033046.37" a="E"><vh>機械設計本質</vh>
<v t="leo.20171116033046.38"><vh>內容</vh></v>
</v>
<v t="leo.20171116033046.39" a="E"><vh>隨身系統 cmd基本指令</vh>
<v t="leo.20171116033046.40"><vh>內容</vh></v>
</v>
</v>
<v t="leo.20171116033046.41"><vh>w4-6</vh>
<v t="leo.20171116033046.42" a="E"><vh>上課大綱</vh>
<v t="leo.20171116033046.43"><vh>內容</vh></v>
</v>
<v t="leo.20171116033046.44" a="E"><vh>利用簡單的For迴圈繪出圖形</vh>
<v t="leo.20171116033046.45"><vh>內容</vh></v>
</v>
<v t="leo.20171116033046.46" a="E"><vh>eric6創建新檔</vh>
<v t="leo.20171116033046.47"><vh>內容</vh></v>
</v>
</v>
<v t="leo.20171116033046.48" a="E"><vh>w7-9</vh>
<v t="leo.20171116033046.49" a="E"><vh>上課大綱</vh>
<v t="leo.20171116033046.50"><vh>內容</vh></v>
</v>
<v t="leo.20171116033046.51" a="E"><vh>錄影錄下如何新增網誌</vh>
<v t="leo.20171116033046.52"><vh>內容</vh></v>
</v>
<v t="leo.20171116033046.53" a="E"><vh>影片嵌入網誌指令</vh>
<v t="leo.20171116033046.54"><vh>內容</vh></v>
</v>
</v>
<v t="leo.20171116033046.55"><vh>期中簡報</vh>
<v t="leo.20171116033046.56" a="E"><vh>學習心得</vh>
<v t="leo.20171116033046.57"><vh>內容</vh></v>
</v>
<v t="leo.20171116033046.58" a="E"><vh>自評成績</vh>
<v t="leo.20171116033046.59"><vh>內容</vh></v>
</v>
</v>
<v t="leo.20180111044332.1"><vh>w10-12</vh>
<v t="leo.20180111044332.2"><vh>上課大綱</vh>
<v t="leo.20180111044332.3"><vh>內容</vh></v>
</v>
<v t="leo.20180111044332.4"><vh>客製化隨身系統</vh>
<v t="leo.20180111044332.5"><vh>內容</vh></v>
</v>
<v t="leo.20180111045242.1"><vh>申請Github帳號</vh>
<v t="leo.20180111045242.2"><vh>內容</vh></v>
</v>
</v>
<v t="leo.20180111045338.1"><vh>w13-15</vh>
<v t="leo.20180111045338.2" a="E"><vh>上課大綱</vh>
<v t="leo.20180111045338.3"><vh>內容</vh></v>
</v>
</v>
<v t="leo.20180111045732.1"><vh>w16-18</vh>
<v t="leo.20180111045732.2" a="E"><vh>上課大綱</vh>
<v t="leo.20180111045732.3"><vh>內容</vh></v>
</v>
<v t="leo.20180111050040.1" a="E"><vh>個人計算機</vh>
<v t="leo.20180111050040.2"><vh>內容</vh></v>
</v>
</v>
<v t="leo.20180111050438.1" a="E"><vh>期末簡報</vh>
<v t="leo.20180111050438.2" a="E"><vh>自評成績</vh>
<v t="leo.20180111050438.3"><vh>內容</vh></v>
</v>
</v>
<v t="leo.20171116033046.60" a="E"><vh>隨身碟內容介紹</vh>
<v t="leo.20171116033046.61"><vh>Win 64 位元專用</vh></v>
</v>
<v t="leo.20171116033046.62" a="E"><vh>Python 與程式設計</vh>
<v t="leo.20171116033046.63" a="E"><vh>Python 與 C/C++</vh>
<v t="leo.20171116033046.64"><vh>程式學習順序</vh></v>
</v>
<v t="leo.20171116033046.65" a="E"><vh>如何學好 Python3</vh>
<v t="leo.20171116033046.66"><vh>Python3 學習</vh></v>
</v>
<v t="leo.20171116033046.67"><vh>如何學習 CAD</vh>
<v t="leo.20171116033046.68"><vh>CAD 學習</vh></v>
</v>
<v t="leo.20171116033046.69" a="E"><vh>MCADP 實習</vh>
<v t="leo.20171116033046.70"><vh>電腦輔助設計實習</vh></v>
</v>
</v>
<v t="leo.20171116033046.71" a="E"><vh>W1 練習</vh>
<v t="leo.20171116033046.72" a="E"><vh>隨身系統練習</vh>
<v t="leo.20171116033046.73"><vh>Python 3.6 程式環境</vh></v>
</v>
<v t="leo.20171116033046.74"><vh>練習 Fossil SCM</vh>
<v t="leo.20171116033046.75"><vh>了解 Fossil SCM</vh></v>
</v>
<v t="leo.20171116033046.76" a="E"><vh>Fossil SCM 功能說明</vh>
<v t="leo.20171116033046.77"><vh>Fossil SCM 功能</vh></v>
</v>
<v t="leo.20171116033046.78" a="E"><vh>採用 SCM 的目標 1/2</vh>
<v t="leo.20171116033046.79"><vh>SCM 的目標 1/2</vh></v>
</v>
<v t="leo.20171116033046.80" a="E"><vh>採用 SCM 的目標 2/2</vh>
<v t="leo.20171116033046.81"><vh>SCM 的目標 2/2</vh></v>
</v>
<v t="leo.20171116033046.82" a="E"><vh>總結 SCM 的目標</vh>
<v t="leo.20171116033046.83"><vh>SCM 的整體目標</vh></v>
</v>
</v>
<v t="leo.20171116033046.84"><vh>課程評分</vh>
<v t="leo.20171116033046.85" a="E"><vh>課程評分</vh>
<v t="leo.20171116033046.86"><vh>如何評分</vh></v>
</v>
<v t="leo.20171116033046.87" a="E"><vh>課程實習分組</vh>
<v t="leo.20171116033046.88"><vh>如何分組</vh></v>
</v>
</v>
<v t="leo.20171116033046.89" a="E"><vh>快捷鍵</vh>
<v t="leo.20171116033046.90"><vh>投影片快捷鍵</vh></v>
</v>
<v t="leo.20171116033046.91" a="E"><vh>各式內容引用範例</vh>
<v t="leo.20171116033046.92" a="E"><vh>導入數學符號與方程式</vh>
<v t="leo.20171116033046.93"><vh>LaTeX 格式方程式</vh></v>
</v>
<v t="leo.20171116033046.94" a="E"><vh>導入縮排程式碼</vh>
<v t="leo.20171116033046.95"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20171116033046.96" a="E"><vh>導入影片</vh>
<v t="leo.20171116033046.97"><vh>iframe 導入影片</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="leo.20171116033046.98" a="E"><vh>@path content</vh>
<v t="leo.20171116033046.99"><vh>@edit 20170920.md</vh></v>
<v t="leo.20171116033046.100"><vh>@clean 20171003.md</vh>
<v t="leo.20171116033046.101"><vh>ex1 - for 迴圈</vh></v>
<v t="leo.20171116033046.102"><vh>ex2 - input 與單位換算</vh></v>
<v t="leo.20171116033046.103"><vh>ex3 - jansen 多連桿機構</vh></v>
<v t="leo.20171116033046.104"><vh>ex4 -turtle 網際繪圖</vh></v>
<v t="leo.20171116033046.105"><vh>filereader</vh></v>
</v>
<v t="leo.20171116033046.106"><vh>@edit 20171012.md</vh></v>
<v t="leo.20171116033046.107"><vh>@edit 20171026.md</vh></v>
<v t="leo.20171116033046.108"><vh>@edit 20171104.md</vh></v>
<v t="leo.20171116033046.109" a="E"><vh>@path pages</vh>
<v t="leo.20171116033046.110"><vh>@edit pages_1.md</vh></v>
</v>
</v>
<v t="leo.20171116033046.111"><vh>產生 .key 與 .crt</vh></v>
</v>
<v t="leo.20171116033058.1"><vh>@button https server</vh></v>
<v t="leo.20171116033103.1"><vh>@button ipv6 https server</vh></v>
</vnodes>
<tnodes>
<t tx="leo.20171116033033.1"></t>
<t tx="leo.20171116033033.2">QTreeWidget {
    /* These apply to the selected item, but not to editing items.*/
    background-color: #ffffec; /* Leo's traditional tree color */
    selection-color: black; /* was white */
    selection-background-color: lightgrey;
    /* font-family: SansSerif; */
    /*font-family: DejaVu Sans Mono;*/
    font-family:YaHei Mono;
    /* 標題字型大小設定 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
 }

/* Headline edit widgets */
QTreeWidget QLineEdit {
    background-color: cornsilk;
    selection-color: white;
    selection-background-color: blue;
    /*font-family: DejaVu Sans Mono;*/    
    font-family:YaHei Mono;
    /* 沒有特別對應字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The log panes */
QTextEdit {
    background-color: #f2fdff;
    selection-color: red;
    selection-background-color: blue;
    /* font-family: Courier New; */
    font-family:YaHei Mono;
    /* log font 大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The body pane */
QTextEdit#richTextEdit {
    background-color: #fdf5f5; /* A kind of pink. */
    selection-color: white;
    selection-background-color: red;
    /*font-family: DejaVu Sans Mono;*/
    /* font-family: Courier New; */
    font-family:YaHei Mono;
    /* 內文字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

QLabel {
    font-family:YaHei Mono;'CherryPy', 'pytz', 'mako', 'beautifulsoup4', 'pymysql', 'peewee'
    /* 下方的 Minibuffer 標題字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

/* Editor labels */
QLineEdit#editorLabel {
    background-color: #ffffec;
    font-family:YaHei Mono;
    /* 沒有直接對應字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
    border: 2px;
    margin: 2px;
}</t>
<t tx="leo.20171116033033.3">horizontal: body pane to the left
vertical: body pane on the botton</t>
<t tx="leo.20171116033040.1">2017 Fall 機械設計工程系 CADP &amp; CP

倉儲位置: https://mde1a1.kmol.info/2017fall

每一協同成員都應該要在 users 目錄下有一個 Leo 檔案

</t>
<t tx="leo.20171116033046.1"></t>
<t tx="leo.20171116033046.100">@language md
Title: 網際 Brython 3.3.4 程式執行環境 
Date: 2017-10-03 11:00
Category: Course
Tags: 2017fall, cp, brython, w4
Slug: 4062-brython-editor-334
Author: 40623131

Brython 程式環境可以用來練習許多 Python3 的簡單語法, 也可以納入 Javascript 程式庫, 利用 Ajax 模式結合網際瀏覽器與伺服器上的資源解決協同產品設計流程上的問題.

&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;!-- 導入 FileSaver 與 filereader --&gt;
&lt;script type="text/javascript" src="./../ace/FileSaver.min.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="./../ace/filereader.js"&gt;&lt;/script&gt;

&lt;!-- 導入最新版的 Brython 標準程式庫 3.3.4 --&gt;
&lt;script type="text/javascript" src="./../data/Brython-3.3.4/brython_dist.js"&gt;
&lt;/script&gt;


&lt;!-- 啟動 Brython 時, 設定 pythonpath 為 data/py, 並將 script1.py 放入, 以便取代 3.2.9 之前版本的 script id 導入 --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['./../data/py']});
}
&lt;/script&gt;

&lt;!-- 以下執行 Brython 程式 --&gt;

### 利用以下的編輯器執行 Python3 程式

在 Firefox 中, 以 Preferences - General - Downloads 選擇 "Always ask me where to save files"

在 Chrome 中, 以 Settings - Advanced - Downloads 選擇 Ask where to save each file before downloading

&lt;script src="./../ace/ace.js" type="text/javascript" charset="utf-8"&gt;&lt;/script&gt;
&lt;script src="./../ace/ext-language_tools.js" type="text/javascript" charset="utf-8"&gt;&lt;/script&gt;
&lt;script src="./../ace/mode-python3.js" type="text/javascript" charset="utf-8"&gt;&lt;/script&gt;
&lt;script src="./../ace/snippets/python.js" type="text/javascript" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;
&lt;script type="text/javascript"&gt;
function doSave(){
    var blob = new Blob([localStorage["py_src"]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById('filename').value
    saveAs(blob, filename+".py");
}
&lt;/script&gt;

&lt;!-- 請注意 Brython 3.3.0 之後的版本, 已經不能使用 script id 模式導入, 改用 pythonpath 中的 script1.py 供後續導入 --&gt;

&lt;script type="text/python3" id="script1"&gt;
import sys
import time
import traceback
import javascript

from browser import document as doc, window, alert

has_ace = True
try:
    editor = window.ace.edit("editor")
    session = editor.getSession()
    session.setMode("ace/mode/python")

    editor.setOptions({
     'enableLiveAutocompletion': True,
     'enableSnippets': True,
     'highlightActiveLine': False,
     'highlightSelectedWord': True
    })
except:
    from browser import html
    editor = html.TEXTAREA(rows=20, cols=70)
    doc["editor"] &lt;= editor
    def get_value(): return editor.value
    def set_value(x):editor.value = x
    editor.getValue = get_value
    editor.setValue = set_value
    has_ace = False

if hasattr(window, 'localStorage'):
    from browser.local_storage import storage
else:
    storage = None

def reset_src():
    if storage is not None and "py_src" in storage:
        editor.setValue(storage["py_src"])
    else:
        editor.setValue('for i in range(10):\n\tprint(i)')
    editor.scrollToRow(0)
    editor.gotoLine(0)

def reset_src_area():
    if storage and "py_src" in storage:
        editor.value = storage["py_src"]
    else:
        editor.value = 'for i in range(10):\n\tprint(i)'

class cOutput:

    def __init__(self,target):
        self.target = doc[target]
    def write(self,data):
        self.target.value += str(data)
        

#if "console" in doc:
sys.stdout = cOutput("console")
sys.stderr = cOutput("console")

def to_str(xx):
    return str(xx)

info = sys.implementation.version
doc['version'].text = 'Brython %s.%s.%s' % (info.major, info.minor, info.micro)

output = ''

def show_console(ev):
    doc["console"].value = output
    doc["console"].cols = 60
    doc["console"].rows = 10

# load a Python script
def load_script(evt):
    _name = evt.target.value + '?foo=%s' % time.time()
    editor.setValue(open(_name).read())

# run a script, in global namespace if in_globals is True
def run(*args):
    global output
    doc["console"].value = ''
    src = editor.getValue()
    if storage is not None:
       storage["py_src"] = src

    t0 = time.perf_counter()
    try:
        #ns = {'__name__':'__main__'}
        ns = {'__name__':'editor'}
        exec(src, ns)
        state = 1
    except Exception as exc:
        traceback.print_exc(file=sys.stderr)
        state = 0
    output = doc["console"].value

    print('&lt;completed in %6.2f ms&gt;' % ((time.perf_counter() - t0) * 1000.0))
    return state

if has_ace:
    reset_src()
else:
    reset_src_area()
    
def clear_console(ev):
    doc["console"].value = ""

def clear_container(ev):
    doc["container"].clear()

doc['run'].bind('click',run)
doc['show_console'].bind('click',show_console)
doc['clear_console'].bind('click',clear_console)
doc['clear_container'].bind('click',clear_container)

&lt;/script&gt;

&lt;div id="version"&gt;&lt;/div&gt;
&lt;div id="editor" style="width:600px;height:300px;"&gt;&lt;/div&gt;

&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;

&lt;form&gt;
    &lt;label&gt;Filename: &lt;input type="text" id="filename" placeholder="input file name"/&gt;.py&lt;/label&gt;
    &lt;input type="submit" value="Save" onclick="doSave();"/&gt;
&lt;/form&gt;
&lt;button id="run"&gt;Run&lt;/button&gt;
&lt;button id="show_console"&gt;Output&lt;/button&gt;
&lt;button id="clear_console"&gt;清除&lt;/button&gt;
&lt;button id="clear_container"&gt;清除畫布&lt;/button&gt;
&lt;div style="width:100%;height:100%;"&gt;
&lt;textarea id="console" autocomplete="off"&gt;&lt;/textarea&gt;
&lt;/div&gt;
&lt;div id="common"&gt;&lt;/div&gt;
&lt;!-- container 主要提供網際繪圖用之畫布 --&gt;
&lt;div id="container"&gt;&lt;/div&gt;
@others</t>
<t tx="leo.20171116033046.101">
&lt;script type="text/python3"&gt;
from browser import document as doc
import script1

def ex1(ev):
    script1.editor.setValue('''#ex1 簡單的 for 迴圈範例
    for i in range(10):
        print(i)
    ''')
    script1.editor.scrollToRow(0)
    script1.editor.gotoLine(0)
doc['ex1'].bind('click',ex1)
&lt;/script&gt;&lt;a id="ex1"&gt;ex1&lt;/a&gt;-for 迴圈
</t>
<t tx="leo.20171116033046.102">
&lt;script type="text/python3"&gt;
from browser import document as doc
import script1

def ex2(ev):
    script1.editor.setValue('''#溫度轉換程式
from browser import document as doc

# 因為此函式與滑鼠互動, 需要 event 當作輸入
def convTemp():
    mystring = ""
    cdegree = input("請輸入攝氏溫度:")
    fdegree = float(cdegree)*9/5 + 32
    output_string = "攝氏 " + str(cdegree) + "度=華氏 " + str(fdegree) + "度" 
    # 利用 print() 將轉換結果送到 console 區
    print(output_string)

#直接呼叫 convTemp() 執行
convTemp()
    ''')
    script1.editor.scrollToRow(0)
    script1.editor.gotoLine(0)
doc['ex2'].bind('click',ex2)
&lt;/script&gt;&lt;a id="ex2"&gt;ex2&lt;/a&gt;-溫度換算</t>
<t tx="leo.20171116033046.103">
&lt;script type="text/python3"&gt;
from browser import document as doc
import script1

def ex3(ev):
    script1.editor.setValue('''#jansen 多連桿機構驗算
from math import pi, cos, sin, sqrt, acos

radian = 180/pi
degree = pi/180

#PLAP
def plap(ax, ay, ac, bac, bx, by, ccw):
    if ccw == 1:
        cx= ac*cos(bac - acos((ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2 + abs(ax - bx)**2 - abs(ay - by)**2)/(2*sqrt(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2)*abs(ax - bx)))) + ax 
        cy= ac*sin(bac - acos((ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2 + abs(ax - bx)**2 - abs(ay - by)**2)/(2*sqrt(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2)*abs(ax - bx)))) + ay
    else:
        cx= ac*cos(bac + acos((ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2 + abs(ax - bx)**2 - abs(ay - by)**2)/(2*sqrt(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2)*abs(ax - bx)))) + ax 
        cy= ac*sin(bac + acos((ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2 + abs(ax - bx)**2 - abs(ay - by)**2)/(2*sqrt(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2)*abs(ax - bx)))) + ay
    return cx, cy

#PLLP
def pllp(ax, ay, ac, cb, bx, by, cw):
    if cw == 1:
        cx =  -((ay - by)*(-ac**2*ay + ac**2*by + ax**2*ay + ax**2*by - 2*ax*ay*bx - 2*ax*bx*by + ay**3 - ay**2*by + ay*bx**2 - ay*by**2 + ay*cb**2 + bx**2*by + by**3 - by*cb**2 - sqrt((-ac**2 + 2*ac*cb + ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2 - cb**2)*(ac**2 + 2*ac*cb - ax**2 + 2*ax*bx - ay**2 + 2*ay*by - bx**2 - by**2 + cb**2))*(ax - bx)) + (ac**2 - ax**2 - ay**2 + bx**2 + by**2 - cb**2)*(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2))/(2*(ax - bx)*(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2))
        cy =  (-ac**2*ay + ac**2*by + ax**2*ay + ax**2*by - 2*ax*ay*bx - 2*ax*bx*by + ay**3 - ay**2*by + ay*bx**2 - ay*by**2 + ay*cb**2 + bx**2*by + by**3 - by*cb**2 + sqrt((-ac**2 + 2*ac*cb + ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2 - cb**2)*(ac**2 + 2*ac*cb - ax**2 + 2*ax*bx - ay**2 + 2*ay*by - bx**2 - by**2 + cb**2))*(-ax + bx))/(2*(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2))
    else:
        cx =  -((ay - by)*(-ac**2*ay + ac**2*by + ax**2*ay + ax**2*by - 2*ax*ay*bx - 2*ax*bx*by + ay**3 - ay**2*by + ay*bx**2 - ay*by**2 + ay*cb**2 + bx**2*by + by**3 - by*cb**2 + sqrt((-ac**2 + 2*ac*cb + ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2 - cb**2)*(ac**2 + 2*ac*cb - ax**2 + 2*ax*bx - ay**2 + 2*ay*by - bx**2 - by**2 + cb**2))*(ax - bx)) + (ac**2 - ax**2 - ay**2 + bx**2 + by**2 - cb**2)*(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2))/(2*(ax - bx)*(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2))
        cy =  (-ac**2*ay + ac**2*by + ax**2*ay + ax**2*by - 2*ax*ay*bx - 2*ax*bx*by + ay**3 - ay**2*by + ay*bx**2 - ay*by**2 + ay*cb**2 + bx**2*by + by**3 - by*cb**2 + sqrt((-ac**2 + 2*ac*cb + ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2 - cb**2)*(ac**2 + 2*ac*cb - ax**2 + 2*ax*bx - ay**2 + 2*ay*by - bx**2 - by**2 + cb**2))*(ax - bx))/(2*(ax**2 - 2*ax*bx + ay**2 - 2*ay*by + bx**2 + by**2))
    return cx, cy

ax = -38
ay = 0
# b 為原點
bx = 0
by = 0
cx = 0
cy = 7.8
# m 為配合 PLAP 新增固定點
mx = 30
my = 7.8
# dcm ccw 方向角度
dcm = 30*degree
cd = 15
# 三角形 dcm 為 ccw plap d=(a, cd, dcm, m)
dx, dy = plap(cx, cy, cd, dcm, mx, my, ccw=1)
print("dx=", dx, "dy=", dy)
# 三角形 aed 為 cw pllp e=(a, ae, ed, d)
ae = 41.5
ed = 50
ex, ey = pllp(ax, ay, ae, ed, dx, dy, cw=1)
print("ex=", ex, "ey=", ey)
# 三角形 afe 為 cw pllp f=(a, af, fe, e)
af = 40.1
fe = 55.8
fx, fy = pllp(ax, ay, af, fe, ex, ey, cw=1)
print("fx=", fx, "fy=", fy)
# 三角形 dha 為 cw pllp h=(d, dh, ha, a)
dh = 61.9
ha = 39.3
hx, hy = pllp(dx, dy, dh, ha, ax, ay, cw=1)
print("hx=", hx, "hy=", hy)
# 三角形 hgf 為 cw pllp g=(h, hg, gf, f)
hg = 36.7
gf = 39.4
gx, gy = pllp(hx, hy, hg, gf, fx, fy, cw=1)
print("gx=", gx, "gy=", gy)
# 三角形 hkg 為 cw pllp k=(h, hk, kg, g)
hk = 49
kg = 65.7
kx, ky = pllp(hx, hy, hk, kg, gx, gy, cw=1)
print("kx=", kx, "ky=", ky)
    ''')
    script1.editor.scrollToRow(0)
    script1.editor.gotoLine(0)
doc['ex3'].bind('click',ex3)
&lt;/script&gt;&lt;a id="ex3"&gt;ex3&lt;/a&gt;-多連桿機構</t>
<t tx="leo.20171116033046.104">
&lt;script type="text/python3"&gt;
from browser import document as doc
import script1

def ex4(ev):
    script1.editor.setValue('''#ex4 turtle 網際繪圖
import turtle
t=turtle.Turtle()

t.penup()
t.left(45)
t.backward(125)
t.right(45)
t.pendown()

for c in ['red', 'green', 'yellow', 'blue']:
    t.color(c)
    t.forward(75)
    t.left(90)

t1=turtle.Turtle("turtle")
t1.penup()

t1.pendown()
t1.width(3)
for c in ['red', 'blue', 'yellow', 'green', 'purple', 'brown']:
    t1.color(c)
    t1.forward(50)
    t1.left(60)

t1.penup()
t1.left(60)
t1.backward(120)

t1.pendown()
t1.color('red')
t1.write("I love Brython!!")

turtle._Screen().end()
    ''')
    script1.editor.scrollToRow(0)
    script1.editor.gotoLine(0)
doc['ex4'].bind('click',ex4)
&lt;/script&gt;&lt;a id="ex4"&gt;ex4&lt;/a&gt;-turtle 網際繪圖
</t>
<t tx="leo.20171116033046.105">
&lt;script type="text/python3"&gt;
from browser import document
import script1

def get_file(e):
    data = open("./../python_ex/for1.py").read()
    script1.editor.setValue(data)
    script1.editor.scrollToRow(0)
    script1.editor.gotoLine(0)
    
document["get"].bind("click", get_file)
&lt;/script&gt;

&lt;script type="text/python3"&gt;
from browser import document
import script1

def get_temp1(e):
    data = open("./../python_ex/temp1.py").read()
    script1.editor.setValue(data)
    script1.editor.scrollToRow(0)
    script1.editor.gotoLine(0)
    
document["get_temp1"].bind("click", get_temp1)
&lt;/script&gt;

&lt;script type="text/python3"&gt;
from browser import document
import script1

def get_ver_and_kw(e):
    data = open("./../python_ex/ver_and_kw.py").read()
    script1.editor.setValue(data)
    script1.editor.scrollToRow(0)
    script1.editor.gotoLine(0)
    
document["get_ver_and_kw"].bind("click", get_ver_and_kw)
&lt;/script&gt;

&lt;script type="text/python3"&gt;
from browser import document
import script1

def jansen(e):
    data = open("./../python_ex/jansen.py").read()
    script1.editor.setValue(data)
    script1.editor.scrollToRow(0)
    script1.editor.gotoLine(0)
    
document["jansen"].bind("click", jansen)
&lt;/script&gt;

&lt;!-- python3 tutorial1-tutorial7 --&gt;

&lt;script type="text/python3"&gt;
from browser import document
import script1

def tutorial(e):
    # 利用 e.target.text 取的對應按鈕的字串, 可以開啟對應的程式檔案
    data = open("./../python_ex/python3_"+e.target.text+".py").read()
    script1.editor.setValue(data)
    script1.editor.scrollToRow(0)
    script1.editor.gotoLine(0)
    
document["tutorial1"].bind("click", tutorial)
document["tutorial2"].bind("click", tutorial)
document["tutorial3"].bind("click", tutorial)
document["tutorial4"].bind("click", tutorial)
document["tutorial5"].bind("click", tutorial)
document["tutorial6"].bind("click", tutorial)
document["tutorial7"].bind("click", tutorial)
&lt;/script&gt;

&lt;button id="get"&gt;for1.py&lt;/button&gt;&lt;button id="get_temp1"&gt;temp1.py&lt;/button&gt;&lt;button id="get_ver_and_kw"&gt;ver_and_kw.py&lt;/button&gt;&lt;button id="jansen"&gt;jansen.py&lt;/button&gt;

&lt;button id="tutorial1"&gt;tutorial1&lt;/button&gt;&lt;button id="tutorial2"&gt;tutorial2&lt;/button&gt;&lt;button id="tutorial3"&gt;tutorial3&lt;/button&gt;&lt;button id="tutorial4"&gt;tutorial4&lt;/button&gt;&lt;button id="tutorial5"&gt;tutorial5&lt;/button&gt;&lt;button id="tutorial6"&gt;tutorial6&lt;/button&gt;&lt;button id="tutorial7"&gt;tutorial7&lt;/button&gt;

Jansen 多連桿機構尺寸圖:

&lt;img src="./../data/jansen_sympy.png" width="800" /&gt;
</t>
<t tx="leo.20171116033046.109"></t>
<t tx="leo.20171116033046.11"></t>
<t tx="leo.20171116033046.111">sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout localhost.key -out localhost.crt

</t>
<t tx="leo.20171116033046.13"></t>
<t tx="leo.20171116033046.15"></t>
<t tx="leo.20171116033046.16"></t>
<t tx="leo.20171116033046.18"></t>
<t tx="leo.20171116033046.2"></t>
<t tx="leo.20171116033046.22">@language xml
@tabwidth -4
@others

</t>
<t tx="leo.20171116033046.23">&lt;!doctype html&gt;
&lt;html lang="en"&gt;
@others
&lt;/html&gt;
</t>
<t tx="leo.20171116033046.24">&lt;head&gt;
    &lt;meta charset="utf-8"&gt;
&lt;title&gt;
2017 Spring 機械設計工程系網際內容管理
&lt;/title&gt;
    &lt;meta name="description" content="A framework for easily creating beautiful presentations using HTML"&gt;
    &lt;meta name="author" content="Hakim El Hattab"&gt;
    
    &lt;meta name="apple-mobile-web-app-capable" content="yes"&gt;
    &lt;meta name="apple-mobile-web-app-status-bar-style" content="black-translucent"&gt;
    
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"&gt;
    
    &lt;link rel="stylesheet" href="data/reveal/reveal.css"&gt;
    &lt;link rel="stylesheet" href="data/reveal/black.css" id="theme"&gt;
    
    &lt;!-- Theme used for syntax highlighting of code --&gt;
    &lt;link rel="stylesheet" href="data/reveal/zenburn.css"&gt;

    &lt;!-- Printing and PDF exports --&gt;
    &lt;script&gt;
        var link = document.createElement( 'link' );
        link.rel = 'stylesheet';
        link.type = 'text/css';
        link.href = window.location.search.match( /print-pdf/gi ) ? 'data/reveal/pdf.css' : 'data/reveal/paper.css';
        document.getElementsByTagName( 'head' )[0].appendChild( link );
    &lt;/script&gt;

    &lt;!--[if lt IE 9]&gt;
    &lt;script src="data/reveal/html5shiv.js"&gt;&lt;/script&gt;
    &lt;![endif]--&gt;
&lt;/head&gt;

</t>
<t tx="leo.20171116033046.25">&lt;body&gt;
@others
&lt;script src="data/reveal/head.min.js"&gt;&lt;/script&gt;
&lt;script src="data/reveal/reveal.js"&gt;&lt;/script&gt;
&lt;script&gt;
        // More info https://github.com/hakimel/reveal.js#configuration
        Reveal.initialize({
            controls: true,
            progress: true,
            history: true,
            center: true,

            transition: 'slide', // none/fade/slide/convex/concave/zoom

            // More info https://github.com/hakimel/reveal.js#dependencies
            dependencies: [
                { src: 'data/reveal/classList.js', condition: function() { return !document.body.classList; } },
                { src: 'data/reveal/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
                { src: 'data/reveal/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
                { src: 'data/reveal/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
                { src: 'data/reveal/zoom.js', async: true },
                { src: 'data/reveal/notes.js', async: true },
                { src: 'data/reveal/math.js', async: true }
            ]
        });
&lt;/script&gt;
&lt;/body&gt;
</t>
<t tx="leo.20171116033046.26">&lt;div class="reveal"&gt;
@others
&lt;/div&gt;

</t>
<t tx="leo.20171116033046.27">&lt;!-- Any section element inside of this container is displayed as a slide --&gt;
&lt;div class="slides"&gt;
@others
&lt;/div&gt;

</t>
<t tx="leo.20171116033046.28">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.29">## 2017Fall  CP

### 虎科大機械設計工程系
####設計一甲40623131周紹叡

&lt;small&gt;
Created by [40623131](https://cpa.kmol.info/40623131/doc/trunk/blog/)
&lt;/small&gt;

[40623131 的 CP 課程網誌](blog/index.html)</t>
<t tx="leo.20171116033046.3">@language python
import os
#os.system("pelican content -o output -s local_publishconf.py -t theme/pelican-bootstrap3")
os.system("pelican content -o blog -s local_publishconf.py")
g.es("admin pelican 近端執行完畢")


</t>
<t tx="leo.20171116033046.30">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.31">#內容大簡介

* [W1-W3](https://cpa.kmol.info/40623131/doc/trunk/index.html#/2)
* [W4-W6](https://cpa.kmol.info/40623131/doc/trunk/index.html#/3)
* [W7-W9](https://cpa.kmol.info/40623131/doc/trunk/index.html#/4)
* [學習心得與筆記](https://cpa.kmol.info/40623131/doc/trunk/index.html#/5)</t>
<t tx="leo.20171116033046.32">&lt;section&gt;
    @others
&lt;/section&gt;



						
</t>
<t tx="leo.20171116033046.33">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.34"># W1-W3

* 準備筆記本、隨身碟(USB3.0)與耳機
* 充分了解隨身系統的啟動關機與使用
* 先在近端運作, 然後同桌電腦, 最後區網與雲端
* 了解機械設計本質, 六種表達與如何培養創造力
* 要怎麼收穫, 就那麼栽, 沒有捷徑, 真的沒有捷徑
* 每天紀錄, 自己如何過完人生中這個寶貴的一天

</t>
<t tx="leo.20171116033046.35">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.36">## 如何開啟與關閉隨身系統

* 啟動點選start.bat
* 關閉點選stop.bat

&lt;img src="https://cpa.kmol.info/40623131/raw/2d1e203c77039b8ae200a8bf52e8b83fbf218b6efaac2e7cc99442815eccf347?m=image/png"width="800" height="400"&gt;&lt;/a&gt;</t>
<t tx="leo.20171116033046.37">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.38">### 機械是什麼, 六種表達與創造力基本元素

* 機→許多小零件組合，彼此互相運動

* 械→固定零件，不違反本質，展現特定功能

* 六種表達 →口語、文字、2D表述(圖表、表格)、3D表述、理論(定量、定性)、實體

* 創造力基本元素 →自學、執行、想像力

</t>
<t tx="leo.20171116033046.39">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.4"></t>
<t tx="leo.20171116033046.40">###隨身系統 cmd基本指令

* cd→更換目錄
* dir→列出目錄中的檔案及子目錄
* mkdir→建立目錄
* fossil clone https://學號@cpa.kmol.info/學號 學號.fossil→克隆遠端資料進近端
* fossil open→在當前目錄解開fossil檔案
* fossil status→查看更改的東西是否有刪除的需要
* fossil delete 檔案路徑→fossil status後發現有檔案Missing，用這個指令刪除
* fossil add. 新增更改的東西
* fossil commit -m"更改版次的註解"→提交至遠端</t>
<t tx="leo.20171116033046.41">&lt;section&gt;
    @others
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.42">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.43"># W4-W6

* 學習如何新增且編輯網誌
* Python3 程式語法練習與for迴圈的使用
* 學習使用eric6

</t>
<t tx="leo.20171116033046.44">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.45">## 用for迴圈寫出簡單的圖形

```
@language python
for i in range(1,5):
    print((5-i)*" "+i*"*")
for i in range(5):
    print(i*" "+(5-i)*"*")
```
&lt;img src="https://cpa.kmol.info/40623131/raw/9cbc89ebc4037c21cd5e48f582e75dcdf6debf0257f7599b233b7b5394f2e70a?m=image/png"width="600" height="400"&gt;&lt;/a&gt;

</t>
<t tx="leo.20171116033046.46">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.47">#### eric6創建新檔

    &lt;img src="https://cpa.kmol.info/40623131/raw/528cdf5af9ff7ae0a48457aead0ce21fe9992eb5829264dec12c742dacdb79d8?m=image/png"width="700" height="150"&gt;&lt;/a&gt;
    
↓

&lt;img src="https://cpa.kmol.info/40623131/raw/84525ffbeb49eff3121ebcc7448d2f25418a6d50c946d086d255052d7fbb4a9e?m=image/png"width="700" height="400"&gt;&lt;/a&gt;
</t>
<t tx="leo.20171116033046.48">&lt;section&gt;
    @others
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.49">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.5">@language python
import os
#os.system("pelican content -o output -s local_publishconf.py -t theme/pelican-bootstrap3")
os.system("pelican content -o blog -s publishconf.py")
g.es("admin pelican Github 執行完畢")


</t>
<t tx="leo.20171116033046.50"># W7-W9 期中考週

* W7-確定所有學員都已經學會管理自己的倉儲與網誌，拍攝練習操作影片,同時上傳到個人 Vimeo 與 Youtube 帳號, 並且將影片嵌入自己的網誌中.

* W8-拉出完整的計算機表單，與第七週相同, 各學員必須拍攝練習操作影片, 並嵌入自己的網誌中.

* W9-將投影片改成自己要講解的內容以及學習到的東西，並錄製影片。</t>
<t tx="leo.20171116033046.51">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.52">## 錄影錄下如何新增網誌

&lt;iframe src="https://player.vimeo.com/video/239922147" width="640" height="492" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

</t>
<t tx="leo.20171116033046.53">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.54">##影片嵌入網誌指令參考

[YouTube](https://www.youtube.com/watch?v=UCjh1r-Q5qU&amp;t=5s)
```
&lt;iframe width="854" height="480" src="https://www.youtube.com/embed/UCjh1r-Q5qU" frameborder="0" gesture="media" allowfullscreen&gt;&lt;/iframe&gt;

```
[Vimeo](https://vimeo.com/239925624)
```
&lt;iframe src="https://player.vimeo.com/video/239925624" width="640" height="347" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/239925624"&gt;國立虎尾科技大學-機械設計工程系-計算機程式-40623131&lt;/a&gt; from &lt;a href="https://vimeo.com/user73298652"&gt;周紹叡&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

```</t>
<t tx="leo.20171116033046.55">&lt;section&gt;
    @others
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.56">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.57">## 學習心得與筆記

九週過去了，從最一開始無知的自己到現在，雖然對於新事物還是一樣茫然，但是多虧了老師與同學的細心指導，也逐漸學會使用eric6，也學會如何上傳影片到遠端及網誌。多虧有這些同學，我才有辦法完成這個投影片。

&lt;img src="https://cpa.kmol.info/40623131/raw/%E7%AD%86%E8%A8%981.jpg?name=dd139f29682f6db60e7de4cfc7e4078739108b93fcd156d371096693675a19ee"width="200" height="200"&gt;&lt;/a&gt;
&lt;img src="https://cpa.kmol.info/40623131/raw/%E7%AD%86%E8%A8%982.jpg?name=72cde024e934a9b885e53de246d0b70e53710f817108478ec6d0c37a31a0f2e1"width="200" height="200"&gt;&lt;/a&gt;</t>
<t tx="leo.20171116033046.58">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.59">##自評成績

* 出席 20%：20
* 平時表現 30%：20
* 驗收考試 30%：17
* 驗收簡報 20%：13
* 總評：70 分</t>
<t tx="leo.20171116033046.60">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.61"># 隨身碟內容介紹

* Windows 64 位元電腦專用
* 可以在電腦間遊走, 擁有統一的近端操作環境
* USB 碟遊走各電腦, 要小心散播病毒
* 玩線上遊戲, 但不要玩到 USB 中毒
* 打開 c:\mde\python2017fall_36 目錄, 從 start.bat 開始
* Python, C/C++, Fossil SCM, Git, Solvespace, V-rep, Blender
* 夠您玩兩年了

</t>
<t tx="leo.20171116033046.62">&lt;section&gt;
    @others
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.63">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.64"># 計算機程式學習順序

* 先學 Python3, 兼學 C/C++
* 了解 WWW 網頁與伺服器架構, 學 Javascript
* 若想再寫手機程式或大型程式, 學 Java
* 其他, 例如: Go, Ruby, Scala, R, Matlab, Mathematica 也都不錯
* 程式就是特定格式的流程,  任何人都必須接觸了解運用
* 計算機程式是與電腦及網路溝通的重要工具, 工程師必備
* 不要再問: 我到底需不需要精熟計算機程式與網路

</t>
<t tx="leo.20171116033046.65">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.66"># 如何學好 Python3

* 上課專心聽, 用心動手練習, 發揮自學力、執行力與想像力
* 工程師可以利用程式, 以協同模式, 預先模擬設計許多產品
* 先學會如何使用 Fossil SCM, 再了解 Pelican 與 Reveal.js
* 利用 Leo Editor 編輯投影片與網誌, 保留學習心得
* 不斷寫, 再不斷寫, 電腦與網路就會是您的好夥伴

</t>
<t tx="leo.20171116033046.67">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.68"># 如何學習 CAD

* CAD 為 Computer Aided Design
* 尤其是 Mechanical Computer Aided Design
* 2D/3D 繪圖是電腦輔助設計的表達方式之一
* 口語、文字、 2D、 3D、 數學與實作表達, 都很重要
* 2D/3D 繪圖採用 Solvespace 與 Onshape
* 熟悉近端與雲端 CAD 後, 可以再用其他  MCAD 工具
* 其他工具包括: SolidWorks, Inventor, Creo Parametric 等

</t>
<t tx="leo.20171116033046.69">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.70"># 電腦輔助設計實習

* 利用近端與雲端工具繪製 Nutcraker 曲柄滑塊機構
* 在近端與雲端模擬機構運動, 進行防止干涉運算設計
* 了解如何將 Nutcracker 零件轉入 V-rep 進行模擬
* 利用 Python 程式跨網路操控 V-rep 中的 Nutcracker
* 重複上述步驟, 各組利用連桿與滑塊機構設計循環運動系統
* 利用  TinkerCAD了解 Arduino 實體與網際馬達控制
* 各小組完成一項機電資循環運動系統設計與模擬
* 各大組將評比後的最終設計, 進行實體列印組裝與展示

</t>
<t tx="leo.20171116033046.71">&lt;section&gt;
    @others
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.72">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.73"># 開啟隨身系統

* 點擊 c:\mde\python2017fall_36 目錄中的 start.bat 開啟
* 產生與 c:\mde\python2017fall_36\data 對應的 y:\ 
* 產生專屬的 Dos 指令區與 SciTE 編輯器
* 用瀏覽器, 以 pyqt5 example calculator 關鍵字找 calculator.py
* 將 calculator.py 內容放入 SciTE, 在 c:\tmp 存為 .py 後按 F5 
* 接著用 ansi c hello word 關鍵字找 .c 程式, 放入 SciTE, 存為 .c
* 存檔後, 按下 F5 執行
* SciTE 可以採解譯模式, 執行 Python3 與 ANSI C 程式

</t>
<t tx="leo.20171116033046.74">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.75"># 了解 Fossil SCM

* 利用 Fossil SCM 關鍵字查詢, 十分鐘後, 請回答下列問題
* 何謂 SCM? 何謂 Fossil SCM?
* 如何使用 Fossil SCM?
* 用與不用 SCM, 有沒有差別?
* 機械設計工程師為何需要使用 Fossil SCM?


</t>
<t tx="leo.20171116033046.76">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.77"># SCM 功能

* SCM 是軟體組成元件與狀態的管理
* 關心要納入那些元件? 如何納入? 元件間如何組合運作?
* 關心目前的狀態如何? 功能是否滿足需求?
* 成員是否團隊合作? 是否創造出協同效益?
* 當狀態產生問題或缺陷, 如何追蹤? 如何改善?
* 成員是否依照規劃, 提供完整的文件、規格與手冊?


</t>
<t tx="leo.20171116033046.78">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.79"># SCM 目標 (1/2)

* 辨識 (identification) - 需求、流程與環境的辨識
* 控制 (control) - 批准或拒絕內容的變更
* 會計 (accounting) -  完整保存每個階段所進行的變更
* 審核 (auditing) - 確認建立完整的文件, 需求, 架構, 規範與使用者手冊
* 構建管理 (build) - 管理過程中所需的各類工具



</t>
<t tx="leo.20171116033046.8"></t>
<t tx="leo.20171116033046.80">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.81"># SCM 目標 (2/2)

* 流程管理 (process) - 確認過程融入組織的發展要求
* 環境管理 (environment) - 提供託管內容所需的軟體與硬體
* 團隊合作 (teamwork) - 促進團隊互動協同
* 缺陷追踪 (defect tracking) - 可追溯每個缺陷的源頭


</t>
<t tx="leo.20171116033046.82">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.83"># SCM 的目標

* 以團隊協同合作模式
* 透過詳細的履歷 (清楚註記時間、變更與建立者)
* 完整呈現並管理各階段內容的組成元件與狀態
* 達到資源高效運用, 最佳化軟體&lt;strike&gt;機械設計&lt;/strike&gt;開發過程

</t>
<t tx="leo.20171116033046.84">&lt;section&gt;
    @others
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.85">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.86"># 課程如何評分

* 出席: 20% (if 全勤: 提問與答題內容*平時表現)
* 平時表現: 30% (隨身碟與倉儲內容 + 每堂筆記內容)
* 驗收考試: 30% (三階段現場錄製操作與心得影片-註記時間與錄製人員學號)
* 驗收簡報: 20% (驗收週各組簡報, 各學員簡報, 根據驗收考試與簡報內容自評與互評)

</t>
<t tx="leo.20171116033046.87">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.88"># 依照學號與座位分組

* 分組不是找同學幫您做作業, 應付專題實習
* 分組是為了學習, 如何與豬隊友進行協同
* 全班依學號入座, 每六人一小組, 每三小組為一大組
* 每班提供兩台廣域伺服器, 配合與個人的隨身碟存放資料
* 每一個階段的練習, 都要拍成練習影片, 上傳 Youtube 與 Vimeo
* 影片標題必須冠上校名、系名、課程名與學號


</t>
<t tx="leo.20171116033046.89">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.9"></t>
<t tx="leo.20171116033046.90"># 投影片快捷鍵

* 利用箭頭上下前後換頁
* 按 f 鍵進入全螢幕模式 (full screen)
* 按 s 鍵可以顯示投影片筆記 (show)
* 按 o 鍵可以切換單張或全域檢視 (overview)
* 按 b 或 . 鍵可以切換螢幕黑屏 (black)
* 按 Esc 可以退出全螢幕或全域檢視 (Escape)

</t>
<t tx="leo.20171116033046.91">&lt;section&gt;
@others
&lt;/section&gt;</t>
<t tx="leo.20171116033046.92">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20171116033046.93"># 數學符號與方程式

Inline math equations go in like so: $\omega = d\phi / dt$. Display
math should get its own line and be put in in double-dollarsigns:

$$I = \int \rho R^{2} dV$$
</t>
<t tx="leo.20171116033046.94">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20171116033046.95">## 利用 Markdown 寫投影片
以下利用 Markdown 格式展示 Python 程式碼:
```
@language python
# use threading and subprocess to threading the make process
import os
import subprocess
import threading

def domake():
    
    path = "../exposed/api/exposed"
    ubuntu = "../Ubuntu"
    
    # create obj path
    
    if not os.path.exists(path+"/../obj"):
        os.makedirs(path+"/../obj")
    
    subprocess.call(["make", "clean"], cwd=path)
    subprocess.call("make", cwd=path)
    subprocess.call(["cp", "{libslvs.so, _slvs.so, slvs.py}", ubuntu], cwd=path)
    subprocess.call(["python3", "circle_ex.py"], cwd=path+"/"+ubuntu)
    
make = threading.Thread(target=domake)
make.start()
```
</t>
<t tx="leo.20171116033046.96">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171116033046.97">## 使用 iframe 導入影片

### 導入影片 template

&lt;iframe src="https://player.vimeo.com/video/183950627" width="640" height="492" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20171116033046.98"></t>
<t tx="leo.20171116033058.1">@language python
import os
import subprocess
import threading
import http.server, ssl

def domake():
    # build directory
    os.chdir("./../")
    server_address = ('localhost', 5443)
    httpd = http.server.HTTPServer(server_address, http.server.SimpleHTTPRequestHandler)
    httpd.socket = ssl.wrap_socket(httpd.socket,
                                   server_side=True,
                                   certfile='localhost.crt',
                                   keyfile='localhost.key',
                                   ssl_version=ssl.PROTOCOL_TLSv1)
    print(os.getcwd())
    print("5443 https server started")
    httpd.serve_forever()

# 利用執行緒執行 https 伺服器
make = threading.Thread(target=domake)
make.start()</t>
<t tx="leo.20171116033103.1">@language python
import os
import subprocess
import threading
import socket
import http.server, ssl

class HTTPServerV6(http.server.HTTPServer):
    address_family = socket.AF_INET6
  
def domake():
    # build directory
    os.chdir("./../")
    ipv6_address = '2001:288:6004:17:3004::808'
    server_address = (ipv6_address, 6443)
    #httpd = http.server.HTTPServer(server_address, http.server.SimpleHTTPRequestHandler)
    httpd = HTTPServerV6(server_address, http.server.SimpleHTTPRequestHandler)
    httpd.socket = ssl.wrap_socket(httpd.socket,
                                   server_side=True,
                                   certfile='localhost.crt',
                                   keyfile='localhost.key',
                                   ssl_version=ssl.PROTOCOL_TLSv1)
    print("6443 https server started")
    httpd.serve_forever()

# 利用執行緒執行 https 伺服器
make = threading.Thread(target=domake)
make.start()</t>
<t tx="leo.20180111044332.1">&lt;section&gt;
    @others
&lt;/section&gt;


						
</t>
<t tx="leo.20180111044332.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20180111044332.3"># W10-W12 檢討週

* 利用 Eric6 完成計算機對話框所需按鍵的配置, 了解如何使用格點佈局, 了解如何設定 Dialog, pressButton 與 lineEdit 物件的尺寸大小, 了解如何命名物件, 了解如何設定 clicked 與 connect 方法。
* 客製化自己的隨身系統
* 申請Github帳號</t>
<t tx="leo.20180111044332.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20180111044332.5">## 客製化隨身系統

* 使用者可以配合需求修改 start.bat, stop.bat 以及 launchLeo.py, 讓系統啟動時, 自行建立進入特定目錄的命令列視窗, 並且自動開啟特定 Leo Editor 專案.</t>
<t tx="leo.20180111045242.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20180111045242.2">## 申請Github帳號

* 利用學校配發的電子郵箱申請 Github 帳號, 目的是以小組協同的模式, 執行各自的期末專案.</t>
<t tx="leo.20180111045338.1">&lt;section&gt;
    @others
&lt;/section&gt;


						
</t>
<t tx="leo.20180111045338.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20180111045338.3"># W13-W15 專案執行週

* 組別協同完成工程用計算器程式
* 將操作過程敘述與操作影片送入網誌與投影片
* 了解程式碼，如何使按鈕有功能
* 學習如何排除協同時產生的衝突</t>
<t tx="leo.20180111045732.1">&lt;section&gt;
    @others
&lt;/section&gt;


						
</t>
<t tx="leo.20180111045732.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20180111045732.3"># W16-W18 期末考週

* 分組協同製作期末報告
* 個人製作簡易計算機
* 繳交製作影片與心得
* 介紹投影片並錄製成個人期末報告</t>
<t tx="leo.20180111050040.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20180111050040.2">## 錄影錄下如何製作簡易計算機

&lt;iframe width="640" height="492" src="https://www.youtube.com/embed/MgiMIXOO-qE" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen&gt;&lt;/iframe&gt;</t>
<t tx="leo.20180111050438.1">&lt;section&gt;
    @others
&lt;/section&gt;


						
</t>
<t tx="leo.20180111050438.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20180111050438.3"># 期末簡報

*自評成績：75分</t>
</tnodes>
</leo_file>
